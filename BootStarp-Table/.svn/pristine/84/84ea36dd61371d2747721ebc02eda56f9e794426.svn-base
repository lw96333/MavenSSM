package com.ne.controller;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.ne.log.LogType;

import org.apache.shiro.SecurityUtils;
import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.ne.bean.PageBean;
import com.ne.entity.CompanyEntity;
import com.ne.entity.CompanylcontractEntity;
import com.ne.entity.StallEntity;
import com.ne.log.LogAnno;
import com.ne.log.UserType;
import com.ne.service.CompanyService;
import com.ne.service.CompanylcontractService;
import com.ne.service.StallService;
import com.ne.util.CBDUtil;
import com.ne.util.ResponseData;

/**
 * 企业类 控制器
 * @author 邓万兵
 *
 * 2019年3月22日
 */
@RestController
public class CompanyController {
	
	/**
	 * 自动注入 企业服务层接口
	 */
	@Autowired
	private CompanyService companyService;
	
	/**
	 * 自动注入车位服务层接口
	 */
	@Autowired
	private StallService stallService;
	
	/**
	 * 自动注入公司合同服务层接口
	 */
	@Autowired
	private CompanylcontractService companylcontractService;
	
	/**
	 * ajax响应对象
	 */
	private ResponseData rd = new ResponseData();
	
	//private static Logger logger = Logger.getLogger(CompanyController.class);
	
	
	/**
	 * 查看企业已租车位
	 * @param modelMap 
	 * @param curPage 当前页 
	 * @param pageSize 每页数量
	 * @return
	 */
	@LogAnno(operateName= LogType.查询,userPower=UserType.企业用户,content="查看企业已租车位")
	@RequestMapping(value="showCompanyRentedStalls",method=RequestMethod.POST)
	public PageBean<StallEntity> showCompanyRentedStallsByCompanyId(
			ModelMap modelMap,Integer curPage,Integer pageSize,
			@RequestParam(value="userid")Integer comid){			
		/**
		 * 获取分页对象
		 */
		PageBean<StallEntity> pageBean = null;
		
		/**
		 * 根据id查看公司
		 */
		CompanyEntity companyEntity = companyService.getById(comid);
		/**
		 * 查看车位合同
		 */
		
		try {
		
			pageBean = showStallPage(curPage,pageSize,comid);			
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		List<StallEntity> list = new ArrayList<StallEntity>();
		if(pageBean!=null){
			List<StallEntity> stalls = pageBean.getDatas();
			StallEntity s = null;
			if(stalls !=null){
				for(int i = 0 ;i<stalls.size();i++){
					s=stalls.get(i);
					s.setCompanyEntity(companyEntity);
					Integer contractId = stalls.get(i).getCompanylcontractid();					
					CompanylcontractEntity companylcontractEntity =null;
					if( contractId !=null && contractId !=0 ){					
						companylcontractEntity =
								companylcontractService.getById(contractId);					
					s.setCompanylcontra(companylcontractEntity);
					}
				list.add(s);
			}
				pageBean.setDatas(list);
		}		
		return pageBean;
	}
		
		return pageBean;
	}
		/**
		 * 封装公司车位 分页对象
		 * @param curPage  当前页
		 * @param pageSize 每页条数
		 * @param comid 公司id
		 * @return 返回分页对象
		 */
		public PageBean<StallEntity> showStallPage(Integer curPage,Integer pageSize,Integer comid){
			
			//通过当前登陆用户ID和用户类型查询车位信息
			CompanyEntity ce = companyService.getById(comid);
			Map<String,Object> map = new HashMap<String, Object>(10);
			map.put("userId", ce.getId());
			map.put("userType", ce.getLevel());
			map.put("curPage", curPage);
			map.put("pageSize", pageSize);
			PageBean<StallEntity> pageBean = null;
			try {
				pageBean = stallService.showComanyRentedStallPage(map);
			} catch (Exception e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
			return pageBean;
		}
	/**
	 * 处理企业资料修改
	 * @param comname 企业联系人姓名
	 * @param comtel  企业联系人电话
	 * @param comid   企业id
	 * @return  返回响应对象
	 */
	@LogAnno(operateName= LogType.修改,userPower=UserType.企业用户,content="修改企业资料")
	@RequestMapping(value="updatecompany",method=RequestMethod.POST)
	public ResponseData updateCompanyInfo(
			@RequestParam(value="comname")String comname ,
			@RequestParam(value="comtel")String comtel,
			@RequestParam(value="comid")String comid){
		boolean falg = true;
	/**
	 * 验证数据有效性
	 */
		if(comname==null||comname==""){
			falg =false;
		}
		if(comtel==null||comtel==""){
			falg =false;
		}
		int id = 0;
		
		/**
		 * 数据验证通过 开始修改资料
		 */
		if(falg){
			try{
				id=Integer.parseInt(comid.trim());
			}catch(Exception e){
				id = 1 ;
			}
			CompanyEntity ce = companyService.getById(id);
			ce.setCompanphone(comtel.trim());		
			ce.setCompanycontact(comname.trim());
			companyService.saveOrUpdate(ce);
			rd.setMessage("updateok");
		}else{
			rd.setMessage("fail");
		}
		return rd ;
	}
	
	/**
	 * 判断用户输入的密码是否正确
	 * @param comid 企业id
	 * @param oldpw 输入的原密码
	 * @return
	 */
	@LogAnno(operateName= LogType.查询,userPower=UserType.企业用户,content="查看密码是否正确")
	@RequestMapping(value="passwordIsTrue",method=RequestMethod.POST)
	public ResponseData passwordIsTure(
			@RequestParam(value="comid")String comid ,
			@RequestParam(value="oldpw")String oldpw){
	//	logger.log(Priority.DEBUG,"判断用户输入密码是否正确！");
		/**
		 * 验证企业用户的密码是否正确
		 */
		rd.setMessage("ok");
		if(oldpw == null || oldpw==""){
			return rd ;
		}else{
			CompanyEntity ce = null ;
			try{
				int id = Integer.parseInt(comid);
				ce = companyService.getById(id);
			}catch (Exception e){
		//		logger.log(Priority.DEBUG,"数字类型转换失败！");
			}
			if(ce==null){
				return rd ;
			}else{
				String dataPW = ce.getLoginpassword();
				String comName = ce.getLoginname();
				String md5PW = CBDUtil.md5(oldpw, comName);
				if(dataPW.equals(md5PW)){
					rd.setMessage("pwtrue");
					return rd ;
					
				}else{
				/*	System.out.println("xiugaimima");
					ce.setLoginpassword(md5PW);
					companyService.saveOrUpdate(ce);*/
				}
			}
			
		}
		
		return rd ;
	}
	/**
	 * 修改企业密码
	 * @param comid 企业id
	 * @param oldpw 企业原密码
	 * @param newpw1 企业新密码
	 * @param newpw2 企业密码确认
	 * @return
	 */
	@LogAnno(operateName= LogType.修改,userPower=UserType.企业用户,content="企业用户修改密码")
	@RequestMapping(value="updatecompanyPW",method=RequestMethod.POST)
	public ResponseData updateComPassword(
			@RequestParam(value="comid")String 	comid,
			@RequestParam(value="oldpw")String 	oldpw,
			@RequestParam(value="newpw1")String newpw1,
			@RequestParam(value="newpw2")String newpw2			
			){
		
		boolean falg = true ;
		/**
		 * 验证数据有效性
		 */
		if(comid==null ||comid ==""){falg = false;}
		if(oldpw==null ||oldpw ==""){falg = false;}
		if(newpw1==null ||newpw1 ==""){falg = false;}
		if(!newpw2.equals(newpw1)){falg = false;}
		/**
		 * 验证通过 开始修改
		 */
		if(falg){
			CompanyEntity ce = null ;
			try{
			ce =companyService.getById(Integer.parseInt(comid));
			}catch(Exception e){
				
			}
			if(ce!=null){
				String dataPW = ce.getLoginpassword();
				String comName = ce.getLoginname();
				String md5PW = CBDUtil.md5(oldpw, comName);
				if(dataPW.equals(md5PW)){
				//	logger.log(Priority.DEBUG,"开始修改密码！");
					String newMd5Pw = CBDUtil.md5(newpw1, comName);
					ce.setLoginpassword(newMd5Pw);
					companyService.saveOrUpdate(ce);
					rd.setMessage("changeOK");
					return rd ;
				}
			}
			
		}
		return rd ;
	}
	
}
