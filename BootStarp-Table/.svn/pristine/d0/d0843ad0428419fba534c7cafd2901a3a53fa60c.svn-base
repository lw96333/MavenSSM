package com.ne.util;

import java.io.File;
import java.io.IOException;
import java.util.Iterator;

import javax.servlet.http.HttpServletRequest;

import org.apache.commons.io.FilenameUtils;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartHttpServletRequest;
import org.springframework.web.multipart.commons.CommonsMultipartResolver;

/**
 * 上传文件的工具类
 * 
 * @author 张冀川
 *
 *         2019年3月21日
 */
public class UploadFiles {

	public static String fileUpload(HttpServletRequest request) throws IllegalStateException, IOException {
		String localhost = "1";
		// 创建上传文件解析器
		CommonsMultipartResolver multipartResolver = new CommonsMultipartResolver(request.getServletContext());
		// 判断上传文件
		if (multipartResolver.isMultipart(request)) {
			// 转换request类型为上传类型
			MultipartHttpServletRequest multiRequest = (MultipartHttpServletRequest) request;
			// 获取上传文件名
			Iterator<String> iterator = multiRequest.getFileNames();

			while (iterator.hasNext()) {
				// 获取上传文件
				MultipartFile file = multiRequest.getFile(iterator.next());

				if (file != null) {
					double num = (double) file.getSize() / 1048576;
					if (num > 1) {
						return localhost = "2";
					}
					// 获取项目所在文件地址
					String path = request.getServletContext().getRealPath("/myimgs");
					// 获取源文件名
					String fileName = file.getOriginalFilename();
					// 获取文件名后缀
					String prefix = FilenameUtils.getExtension(fileName);

					if (!("jpg".equals(prefix))&&!("png".equals(prefix))) {
						return localhost = "3";
					}

					if (fileName != null && !(fileName.equals(""))) {
						// 新的文件名
						String newFileName = System.currentTimeMillis() + "." + prefix;

						localhost = path + File.separator + newFileName;

						// 写文件
						file.transferTo(new File(localhost));
					}
				}
			}
		}
		return localhost;
	}
}
