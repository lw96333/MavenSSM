 var contractId = -1;
    $(function () {
    $('#tables').bootstrapTable({
        url: '../select',         //请求后台的URL（*）
        method: 'post',                      //请求方式（*）
        contentType: "application/x-www-form-urlencoded",//post请求的话就加上这个句话
        toolbar: '#toolbar',                //工具按钮用哪个容器
        striped: false,                      //是否显示行间隔色
        cache: false,                       //是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
        pagination: true,                   //是否显示分页（*）
        sortable: true,                     //是否启用排序
        sortOrder: "asc",                   //排序方式
       // queryParams: oTableInit.queryParams,//传递参数（*）
        sidePagination: "server",           //分页方式：client客户端分页，server服务端分页（*）
        pageNumber:1,                       //初始化加载第一页，默认第一页
        pageSize: 5,                       //每页的记录行数（*）
        pageList: [5, 10, 20],        //可供选择的每页的行数（*）
        //search: true,                       //是否显示表格搜索，此搜索是客户端搜索，不会进服务端，所以，个人感觉意义不大
        strictSearch: true,
        showColumns: true,                  //是否显示所有的列
        showRefresh: true,                  //是否显示刷新按钮
        minimumCountColumns: 2,             //最少允许的列数
        clickToSelect: true,                //是否启用点击选中行
        //height: 500,                        //行高，如果没有设置height属性，表格自动根据记录条数觉得表格高度
        uniqueId: "id",                     //每一行的唯一标识，一般为主键列
        showToggle:true,                    //是否显示详细视图和列表视图的切换按钮
        cardView: false,                    //是否显示详细视图
        detailView: false,
        queryParams: function (params) { // 请求服务器数据时发送的参数，可以在这里添加额外的查询参数，返回false则终止请求

            return {
            	pageSize: params.limit, // 每页要显示的数据条数 （params.limit）不可变表示开始数据位置 size可以变 对应后台的取值
                curPage: params.offset, // 每页显示数据的开始行号 （params.offset）不可变表示结束数据位置 cur可以变 对应后台的取值
                //上面两个参数后端分页不能少
                //可以加自己的参数
            }
        },
        responseHandler: function(Data) {//请求得到参数处理 res是服务器返回的参数 （可以取任何变量名（和AJAX一样））
            console.log(Data);
            return {
                "total": Data.tolSize,//总条数 （"total"）不能变 插件特定解析字段 后面的值可根据实际情况做变化
                "rows": Data.datas  //数据  （"rows"）不能变 插件特定解析字段 后面的值可根据实际情况做变化
            };
        },
        columns: [{
            field: 'complainanter.name', //对象属性字段 与java对象类中字段一致
            title: '投诉方',
            align: 'center'
        }, {
            field: 'bycomplainanter.name',
            title: '被投诉方',
            align: 'center'
        }, {
            field: 'time',
            title: '投诉时间',
            align: 'center'

        },{
            field: 'type', //对象中有对象需要在点一层
            title: '受理结果',
            align: 'center',

        },{
            field: 'operation',
            title: '操作',
            align: 'center',
            formatter:addFunctionAlty,//表格中增加按钮
            events:{
                "click #btn_update":function(e,value,row,index) {    
                	contractId = row.id;
                	$("#dz").html(row.stallEntity.stalladdress);
                	$("#bh").html(row.stallEntity.stallnumber);
                	$("#qy").html(row.stallEntity.stallarea);
                	$("#cq").html(row.stallEntity.propertynumber);
                	$("#user").html(row.complainanter.name);
                	$("#userer").html(row.complainanter.realname);
                	$("#sf").html(row.complainanter.identitycard);
                	$("#zy").html(row.complainanter.professional);
                	$("#phone").html(row.complainanter.phone);
                	$("#ly").html(row.context);
                	$("#user2").html(row.bycomplainanter.name);
                	$("#userer2").html(row.bycomplainanter.realname);
                	$("#sf2").html(row.bycomplainanter.identitycard);
                	$("#zy2").html(row.bycomplainanter.professional);
                	$("#phone2").html(row.bycomplainanter.phone);
                }

            }//给按钮注册事件  "click #btn_delete" 对应事件 和选择器
        }]
    });

   
    function addFunctionAlty(value, row, index) {
    	console.log((row.type=="已处理"))
    	if(row.type=="已处理"){
    		return [
                '<button id="btn_update" class="btn btn-info" data-toggle="modal" data-target="#myModal" disabled="disabled">受理</button>'
            ].join('');
    	}else{
    		 return [
    	            '<button id="btn_update" class="btn btn-info" data-toggle="modal" data-target="#myModal">受理</button>'
    	        ].join('');
    	}
       
        
       
    }
    //修改投诉结果
	    $("#btn").click(function(){
			//alert(row.id);
			$.ajax({
				url:"../unpdate1",
				type:"POST",
				data:{ //_method:"PUT",//用于支持PUT或DELETE
					id:contractId
				},
				dataType:"json",
				success:function(responseData){
					if(responseData.data["boolean1"]==true){
						alert("受理成功");
						$("#tables").bootstrapTable("refresh");
					}else{
						alert("受理失败");
					}
				},
			})
		})
//修改投诉结果
		$("#btn1").click(function(){
			//alert(row.id);
			$.ajax({
				url:"../unpdate2",
				type:"POST",
				data:{ //_method:"PUT",//用于支持PUT或DELETE
					id:contractId
				},
				dataType:"json",
				success:function(responseData){
					if(responseData.data["boolean2"]==true){
						alert("受理成功");
						$("#tables").bootstrapTable("refresh");
					}else{
						alert("受理失败");
					}
				},
			})
		})


//修改投诉结果
	$("#btn2").click(function(){
				//alert(row.id);
				$.ajax({
					url:"../unpdate3",
					type:"POST",
					data:{ //_method:"PUT",//用于支持PUT或DELETE
						id:contractId
					},
					dataType:"json",
					success:function(responseData){
						if(responseData.data["boolean3"]==true){
							alert("受理成功");
							$("#tables").bootstrapTable("refresh");
						}else{
							alert("受理失败");
						}
					},
				})
			})

    })
    