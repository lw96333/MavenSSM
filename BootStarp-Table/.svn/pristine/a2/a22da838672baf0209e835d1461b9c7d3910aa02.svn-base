<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx-3.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <context:component-scan base-package="com.ne"/>


    <!-- 配置数据源（使用C3P0数据源实现） -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
          destroy-method="close"><!-- destroy-method="close"的作用是当数据库连接不使用的时候，就把该连接重新放到数据池中，方便下次使用调用 -->
        <!-- 指定连接数据库的驱动 -->
        <property name="driverClass" value="com.mysql.jdbc.Driver"/>
        <!-- 指定连接数据库的URL -->
        <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/cdb?characterEncoding=utf8"/>
        <!-- 指定连接数据库的用户名 -->
        <property name="user" value="root"/>
        <!-- 指定连接数据库的密码 -->
        <property name="password" value="1234"/>


        <!--配置c3p0-->
        <property name="maxPoolSize" value="20"/><!--连接池中连接最大数-->
        <property name="minPoolSize" value="1"/>
        <property name="initialPoolSize" value="3"/><!--连接池中初始化连接数-->
        <property name="maxIdleTime" value="5000"/><!--连接池连接超时时长-->
        <property name="idleConnectionTestPeriod" value="10000"/><!--连接池线程检测间隔时长-->
        <property name="acquireIncrement" value="3"/><!--连接耗尽批量创建连接数-->
    </bean>

    <!--配置事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 开启注解事务-->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!-- 配置sqlSessionFactoryBean -->
    <bean id="sqlSessionFactory" class="com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>

        <property name="typeAliasesPackage" value="com.ne.entity"></property>
    </bean>
    <!-- 配置mybatis 扫描接口路径 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.ne.dao"></property>
    </bean>

    <!--配置自定义的realm-->
    <bean id="loginRealm" class="com.ne.shiro.LoginRealm">
        <!--  密码需要加密：加密器 -->
        <property name="credentialsMatcher" ref="credentialsMatcher"/>
    </bean>

    <!-- 配置安全管理器SecurityManager -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="loginRealm"/>
        <!--给shiro添加缓存机制注入-->
        <property name="cacheManager" ref="cacheManager"></property>
        <!--免登录配置注入（记住我）-->
        <property name="rememberMeManager" ref="cookieRememberMeManager"/>
        <property name="sessionManager" ref="sessionManager"/>
    </bean>


    <!--自定义LogoutFilter,退出-->
    <bean id="logoutFilter" class="org.apache.shiro.web.filter.authc.LogoutFilter">
        <property name="redirectUrl" value="../login.jsp"/>
    </bean>

    <!-- 定义ShiroFilter -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="../login.jsp"/>
        <property name="unauthorizedUrl" value="../login.jsp"/> <!--验证错误-->
        <property name="filters">
            <map>
                <entry key="logout" value-ref="logoutFilter"/>
            </map>
        </property>
        <property name="filterChainDefinitions">
            <value>

                /adminJsp/companyManageIndexList.jsp=user,perms[admin:user]
                /adminJsp/personalList.jsp=user,perms[admin:user]
                /adminJsp/personalSale.jsp=user,perms[admin:user]
                /adminJsp/parkPositionManageList.jsp=user,perms[admin:stall]
                /adminJsp/complain.jsp=user,perms[admin:complaint]
                /adminJsp/corporateTenantContract.jsp=user,perms[admin:contract]
                /adminJsp/externalContract.jsp=user,perms[admin:contract]
                /adminJsp/*=user,roles[admin]
                /company-jsp/*=user,roles[company]
                /superAdminJsp/*=user,roles[superAdmin]
                /grjsp/*=user,roles[personal]
                /login.jsp=anon
            </value>
        </property>
    </bean>

    <!--加密器-->
    <bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
        <!--加密算法-->
        <property name="hashAlgorithmName" value="md5"/>
        <!--散列次数-->
        <property name="hashIterations" value="3"/>
    </bean>

    <!-- 缓存管理器开始 -->
    <bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManager" ref="ehCacheManager"/>
    </bean>
    <bean id="ehCacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
        <property name="configLocation" value="classpath:shiro-ehcache.xml"/>
        <property name="shared" value="true"></property>
    </bean>
    <!--记住我配置-->
    <bean class="org.apache.shiro.web.mgt.CookieRememberMeManager" id="cookieRememberMeManager">
        <property name="cookie" ref="cookie"/>
    </bean>
    <bean class="org.apache.shiro.web.servlet.SimpleCookie" id="cookie">
        <constructor-arg value="rememberMe"/>
        <property name="maxAge" value="1800000"/>
    </bean>


    <bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.MemorySessionDAO"/>
    <!--回话管理-->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <!--session失效时间-->
        <property name="globalSessionTimeout" value="1800000"/>
        <property name="deleteInvalidSessions" value="true"/>
        <property name="sessionDAO" ref="sessionDAO"/>
    </bean>

    <!--quartz(定时器)-->
    <bean name="job" class="com.ne.quartz.SessionQuartz"/>
    <bean id="springQtzJobMethod" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <!-- 执行的类 -->
        <property name="targetObject">
            <ref bean="job"/>
        </property>
        <!-- 类中的方法 -->
        <property name="targetMethod">
            <value>countSession</value>
        </property>
    </bean>
    <!--配置任务Trigger-->
    <bean id="cronTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail">
            <ref bean="springQtzJobMethod"/>
        </property>
        <!-- 每一秒钟执行一次 -->
        <property name="cronExpression">
            <value>0 0/5 * * * ?</value>
        </property>
    </bean>
    <!--配置任务总调度-->
    <bean id="springJobSchedulerFactoryBean" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <ref bean="cronTrigger"></ref>
            </list>
        </property>

    </bean>


</beans>