package com.ne.controller;

import org.apache.log4j.Logger;
import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.ne.entity.CompanyEntity;
import com.ne.log.LogAnno;
import com.ne.log.UserType;
import com.ne.log.LogType;
import com.ne.service.CompanyService;
import com.ne.util.CBDUtil;
import com.ne.util.ResponseData;
/**
 * 后台企业管理前端控制器
 * @author 张晋忠
 *
 * 2019年3月21日
 */
@RestController
public class AddCompanyController {
	@Autowired
	private CompanyService companyService;
	private static Logger logger = null;

	static {
		logger = Logger.getLogger(AddCompanyController.class);
	}
	/**
	 * 添加企业
	 * @param companyEntity
	 * @return
	 */
	@LogAnno(content = "添加企业用户", operateName =LogType.添加, userPower = UserType.后台管理员)
	@RequestMapping(value="addCompany",method=RequestMethod.POST)
	public ResponseData addCompany(CompanyEntity companyEntity) {
		logger.info("收到添加企业用户请求");
		String loginName = companyEntity.getLoginname();
		String password = companyEntity.getLoginpassword();
		String comName = companyEntity.getCompanyname();
		String contacter = companyEntity.getCompanycontact();
		String phone = companyEntity.getCompanphone();
		String address = companyEntity.getCompanyaddress();
		//判断用户名是否重复
		QueryWrapper<CompanyEntity> queryWrapper = new QueryWrapper<CompanyEntity>();
		
		int count = companyService.count(queryWrapper.eq("loginname", loginName));
		//用户名（汉字、字母、数字的组合）
		boolean regflag1=true;
		String regName = "^[a-zA-Z0-9_\\u4e00-\\u9fa5]+$";
		if(loginName==null||loginName==""||!loginName.trim().matches(regName)||count!=0) {
			regflag1=false;
		}
		//密码（6-16位数字和字母的组合）
		boolean regflag2=true;
		String regPwd = "^[a-zA-Z0-9]{6,16}$";
		if(password==null||password==""||!password.trim().matches(regPwd)) {
			regflag2=false;
		}
		boolean regflag3=true;
		if(comName==null||comName==""||!comName.trim().matches(regName)) {
			regflag3=false;
		}
		//联系人 两位以上汉字
		boolean regflag4=true;
		String regContacter = "^[\\u4e00-\\u9fa5]{2,}$";
		if(contacter==null||contacter==""||!contacter.trim().matches(regContacter)) {
			regflag4=false;
		}
		boolean regflag5=true;
		String regPhone = "^1([38]\\d|4[579]|[57][0-35-9]|66|9[89])\\d{8}$";
		if(phone==null||phone==""||!phone.trim().matches(regPhone)) {
			regflag5=false;
		}
		
		boolean regflag6=true;
		if(address==null||address==""||!address.trim().matches(regName)) {
			regflag6=false;
		}
		ResponseData responseData = new ResponseData();
		//md5加密
		String md5PW = CBDUtil.md5(password, loginName);
		companyEntity.setLoginpassword(md5PW);
		companyEntity.setLevel("企业");
		if(regflag1&&regflag2&&regflag3&&regflag4&&regflag5&&regflag6) {
		boolean flag = companyService.save(companyEntity);
		responseData.getData().put("flag", flag);
		}else {
			responseData.getData().put("flag", false);	
		}
		return responseData;
	}
}
