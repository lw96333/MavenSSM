package com.ne.controller;

import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.ne.entity.PersonalEntity;
import com.ne.log.LogAnno;
import com.ne.log.LogType;
import com.ne.log.UserType;
import com.ne.service.PersonalService;
import com.ne.shiro.CustomLoginToken;
import com.ne.util.CBDUtil;
import com.ne.util.ResponseData;

import org.apache.ibatis.javassist.expr.NewArray;
import org.apache.log4j.Logger;
import org.apache.shiro.SecurityUtils;
import org.apache.shiro.authc.IncorrectCredentialsException;
import org.apache.shiro.authc.UnknownAccountException;
import org.apache.shiro.subject.Subject;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import javax.servlet.http.HttpSession;

/**
 * @Auther: tangxiong
 * @Date: 2019/3/23 15:29
 * @Description:处理登录表现层
 */
@RestController
public class LoginController {

	private static Logger logger = null;
	@Autowired
	private PersonalService personalService;

	static {
		logger = Logger.getLogger(LoginController.class);
	}

	/**
	 * 登录验证
	 * 
	 * @param username
	 * @param password
	 * @param userType
	 * @return
	 */
	@LogAnno(operateName = LogType.登录)
	@RequestMapping(value = "login", method = RequestMethod.POST, produces = { "application/json;charset=UTF-8" })
	public ResponseData login(String username, String password, String userType, boolean rememberMe,
			HttpSession session) {
		logger.info("登录验证！");
		logger.info(username);

		Subject subject = SecurityUtils.getSubject();
		CustomLoginToken token = new CustomLoginToken(username, password, userType);
		if (rememberMe) {
			token.setRememberMe(true);
		}
		try {
			subject.login(token);
		} catch (UnknownAccountException e) {
			return ResponseData.notFound();
		} catch (IncorrectCredentialsException e) {
			return ResponseData.unAuthorized();
		}
		return ResponseData.ok();
	}

	@LogAnno(operateName = LogType.添加, userPower = UserType.个人用户, content = "个人用户注册")
	@RequestMapping(value = "regist", method = RequestMethod.POST, produces = { "application/json;charset=UTF-8" })
	public int register(PersonalEntity personalEntity) {
		logger.info("注册！");
		logger.info(personalEntity);
		String md5 = CBDUtil.md5(personalEntity.getPassword(), personalEntity.getName());
		personalEntity.setPassword(md5);
		QueryWrapper<PersonalEntity> pWrapper = new QueryWrapper<>();
		pWrapper = pWrapper.eq("name", personalEntity.getName());
		if (personalService.count(pWrapper) == 0) {
			boolean save = personalService.save(personalEntity);
			if (save) {
				return 1;
			} else {
				return -1;
			}
		}else {
			return -1;
		}

	}
}
